<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta http-equiv="X-UA-Compatible" content="ie=edge" />
  <title>Document</title>
</head>

<body>
  <h1>Title</h1>
  <input type="date" value="2018-06-01" id="startDate">
  <input type="date" value="2019-01-01" id="endDate">
  <canvas id="myChart"></canvas>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js"></script>
  <script src="https://unpkg.com/axios/dist/axios.min.js"></script>

  <script>
    const ctx = document.getElementById("myChart").getContext("2d");

    let dateFrom = document.querySelector('#startDate').value;
    let dateTo = document.querySelector('#endDate').value;
    let apiObject = undefined;



    let apiUrl = `http://api.coindesk.com/v1/bpi/historical/close.json?start=${dateFrom}&end=${dateTo}`;

    /* function peti() {
      axios
        .get(apiUrl)
        .then(responseFromAPI => {
          console.log(responseFromAPI.data);
          return responseFromAPI.data;
        })
        .catch(err => {
          console.log("Error while getting the data: ", err);
        });
    }*/
    function changing () {
      dateFrom = startDate.value;
      dateTo = document.querySelector('#endDate').value;
      console.log(dateFrom, dateTo);
      apiUrl = `http://api.coindesk.com/v1/bpi/historical/close.json?start=${dateFrom}&end=${dateTo}`;
      axios
        .get(apiUrl)
        .then(responseFromAPI => {
          //console.log(responseFromAPI.data);
          printTheChart(responseFromAPI.data);
        })
        .catch(err => {
          console.log("Error while getting the data: ", err);
        });
    }
    changing()
    startDate.addEventListener('change', () => {
      changing();
    })

    endDate.addEventListener('change', () =>{
      changing();
    })

    function printTheChart(stockData) {
      const dailyData = stockData.bpi;
      const stockDates = Object.keys(dailyData);
      const stockPrices = Object.values(dailyData)



      console.log(stockDates,stockPrices);

      // debugger
      const chart = new Chart(ctx, {
        type: "line",
        data: {
          labels: stockDates,
          datasets: [
            {
              label: "Stock Chart",
              backgroundColor: "rgb(255, 99, 132)",
              borderColor: "rgb(255, 99, 132)",
              fill: false,
              data: stockPrices
            }
          ]
        }
      }); // closes chart = new Chart()
    }
  </script>
</body>

</html>